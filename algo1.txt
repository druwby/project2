Algorithm 1: Walls of Maria and the Titans 🏰👹
The Walls of Maria have been breached by Titans, and humanity is struggling to find
safety inside the remaining strongholds. You are given an m × n 2D grid representing the
city, where different cells have specific meanings:
● -1 → A Titan-infested area that is impassable.
● 0 → A safe stronghold where survivors can take refuge.
● INF → An open city area where humans are trying to survive.
Your task is to update the grid in-place so that each open city area (INF) contains the
shortest distance to the nearest safe stronghold (0). If a city area cannot reach a
stronghold, it should remain INF.
You can only move up, down, left, or right (no diagonal movements).
Input Format:
● An m × n 2D grid, where each cell is either -1 (Titan-infested area), 0 (safe
stronghold), or INF (open city area).
Output Format:
● Modify the grid in-place, updating each INF cell with the shortest distance to the
nearest safe stronghold.
Constraints:
● 1≤ m,n ≤250
● The number of safe strongholds (0s) is at least one.
● There may be Titan-infested areas (-1) blocking paths.
Sample 1:
Input: [
[INF, -1, 0, INF],
[INF, INF, INF, -1],
[INF, -1, INF, -1],
[0, -1, INF, INF]
]
Output: [
[3, -1, 0, 1],
[2, 2, 1, -1],
[1, -1, 2, -1],
[0, -1, 3, 4]
]
Sample 2:
Input: [
[0, INF, INF],
[INF, -1, INF],
[INF, INF, 0]
]
Output: [
[0, 1, 2],
[1, -1, 1],
[1, 1, 0]
]